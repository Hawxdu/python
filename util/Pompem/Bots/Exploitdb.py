# -*- coding: utf-8 -*-
import sys
sys.path.insert(0, '..')
from Engine.Functions import DownloadPage
from Model.Result import Result

import re


class ExploitDB:
    def __init__(self, filter_description=None, results=[],):
        self.filter_description = filter_description
        self.results = results

    def botSearch(self):
        d = DownloadPage()
        self.results = []
        for i in range(5):
            url = "http://www.exploit-db.com/search/"
            parameters = {"action": "search", "filter_page":"{0}".format(i),
                          "filter_description":"{0}".format(self.filter_description)}
            try:
                pagehtml = d.getDownloadPage(url, parameters)
                if (pagehtml):
                    self.extractData(pagehtml)
            except Exception, ex:
                pass
        return self.results



    def extractData(self, html):
        result = Result()
        html = re.sub(r"\n", " ", html)
        html = re.sub(r"\"", "'", html)
        r = re.compile(r"<tr.*?"
                       "class='list_explot_date'>(?P<Date>[^<]*?)<.*?class='list_explot_dlink'>.*?"
                       "<a href='(?P<Download>[^']*?)'.*?class='list_explot_description'>.*?"
                       "<a href='(?P<Link>[^']*?)'>(?P<Description>[^<]*?)<.*?"
                       "class='list_explot_author'>.*?"
                       "title='(?P<Author>[^']*?)'.*?"
                       "</tr>")
        for match in r.finditer(html):
            if match:
                self.results.append(match.groupdict())











